import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import ReadMeForm from '@/components/readme-form/ReadMeForm'
import { ProfileInfo } from '@/global-types'
import useFetch from '@/hooks/useFetch'
import { API_ENDPOINTS } from '@/constants'
import { useCallback } from 'react'
import useDownloadFile from '@/hooks/useDownloadFile'
import PageTitle from '@/components/PageTitle'
import AccentColoredText from '@/components/AccentColoredText'

export default function Home() {
  //Hooks
  const { error, loading, data, callApi } = useFetch()

  useDownloadFile(data as Blob | undefined, 'profile', 'svg')

  // Handlers
  const onCollectedInfo = useCallback(
    (info: ProfileInfo): void => {
      callApi(API_ENDPOINTS.PROFILE_GENERATOR, true, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: info ? JSON.stringify({ theme: 'awesome', ...info }) : undefined,
      })
    },
    [callApi]
  )

  return (
    <>
      <Head>
        <title>Generate your own ReadMe file</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <PageTitle>
          <AccentColoredText>Awesome</AccentColoredText> Profile
          <AccentColoredText className={styles.accentText}>
            {' '}
            README
          </AccentColoredText>{' '}
          Generator
        </PageTitle>
        {loading ? (
          <p>loading</p>
        ) : (
          <ReadMeForm onCollectedInfo={onCollectedInfo} />
        )}
        {error && <p>Error while generating the profile {error.toString()}</p>}
      </main>
    </>
  )
}
